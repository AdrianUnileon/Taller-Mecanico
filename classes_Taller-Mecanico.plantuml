@startuml classes_Taller-Mecanico
scale 0.5 
skinparam nodesep 10  
skinparam ranksep 20 
class "ActualizarEstadoPedido" as src.vista.PedidoRecibido.ActualizarEstadoPedido {
  controlador
  parent : NoneType
  cargar_pedidos()
  marcar_recibido()
  setup_events()
  setup_ui()
  volver()
}
class "AdministradorPanel" as src.vista.AdministradorPanel.AdministradorPanel {
  administrador : NoneType
  administrador_orden
  gestionar_pedidos_proveedores()
  gestionar_proveedores()
  gestionar_repuestos()
  pedidos()
  salir_aplicacion()
  setup_events()
  setup_ui()
}
class "AnadirProveedor" as src.vista.AnadirProveedor.AnadirProveedor {
  controlador
  parent : NoneType
  guardarProveedor()
  limpiar_campos()
  setup_events()
  setup_ui()
  validar_campos()
  volver()
}
class "AnadirRepuesto" as src.vista.AnadirRepuestos.AnadirRepuesto {
  controlador_proveedores
  controlador_repuestos
  parent : NoneType
  anadir_repuesto()
  cargar_proveedores_en_combo()
  limpiar_campos()
  setup_events()
  setup_ui()
  volver()
}
class "AsignarOrden" as src.vista.AsignarOrden.AsignarOrden {
  controller
  usuario : NoneType
  asignar()
  cargar_mecanicos()
  cargar_ordenes_pendientes()
  setup_events()
  setup_ui()
  volver()
}
class "ClienteDao" as src.modelo.UserDao.ClienteDAO.ClienteDao {
  conn : CMySQLConnection, MySQLConnection
  insertar(cliente: ClienteVO) -> int
  obtener_id_cliente_por_usuario(id_usuario)
  select() -> list
}
class "ClientePanel" as src.vista.ClientePanel.ClientePanel {
  historial_window
  id_cliente : NoneType
  cerrar_sesion()
  consultar_estado_vehiculo()
  consultar_historial_servicios()
  setup_events()
  setup_ui()
}
class "ClienteVO" as src.modelo.vo.ClienteVO.ClienteVO {
  Apellidos
  Apellidos : NoneType
  Contacto
  Contacto : NoneType
  Direccion
  Direccion : NoneType
  IDCliente
  IDCliente : NoneType
  IDUsuario
  IDUsuario : NoneType
  Nombre
  Nombre : NoneType
}
class "ControladorActualizarEstado" as src.controlador.ControladorActualizarEstado.ControladorActualizarEstado {
  orden_dao
  actualizar_estado_orden(id_orden, nuevo_estado, costo_mano_obra)
}
class "ControladorActualizarPedido" as src.controlador.ControladorPedidosRecibidos.ControladorActualizarPedido {
  dao_pedido
  marcar_pedido_como_recibido(id_pedido)
  obtener_pedidos_en_transito()
}
class "ControladorAsignarOrden" as src.controlador.ControladorAsignarOrden.ControladorAsignarOrden {
  dao_mecanico
  dao_orden
  asignar_orden(id_orden, id_mecanico)
  obtener_mecanicos_disponibles()
  obtener_ordenes_pendientes()
}
class "ControladorConsultarEstado" as src.controlador.ControladorConsultarEstado.ControladorConsultarEstado {
  orden_dao
  obtener_ordenes_asignadas_por_mecanico(id_mecanico)
}
class "ControladorDarDeBajaVehiculos" as src.controlador.ControladorDarDeBajaVehiculos.ControladorDarDeBajaVehiculos {
  vehiculo_dao
  dar_de_baja_vehiculo(id_vehiculo: int) -> (bool, str)
  obtener_vehiculos_con_clientes()
}
class "ControladorEstadoActual" as src.controlador.ControladorEstadoActual.ControladorEstadoActual {
  dao
  obtener_ordenes_actuales(id_cliente)
}
class "ControladorFacturas" as src.controlador.ControladorFactura.ControladorFacturas {
  factura_dao
  generar_factura(id_orden, costo_mano_obra, id_recepcionista)
  obtener_ordenes_para_factura()
}
class "ControladorGestionProveedores" as src.controlador.ControladorGestionProveedores.ControladorGestionProveedores {
  dao
  obtener_proveedores()
}
class "ControladorGestionRepuestos" as src.controlador.ControladorGestionRepuestos.ControladorGestionRepuestos {
  dao
  obtener_repuestos()
}
class "ControladorHistorialServicios" as src.controlador.ControladorHistorialServicios.ControladorHistorialServicios {
  id_cliente
  orden_dao
  obtener_historial()
}
class "ControladorLogin" as src.controlador.ControladorLogin.ControladorLogin {
  user_dao
  autenticar_usuario(email: str, password: str)
}
class "ControladorOperacionesProveedores" as src.controlador.ControladorOperacionesProveedores.ControladorOperacionesProveedores {
  dao
  anadir_proveedor(nombre, contacto, direccion)
  eliminar_proveedor(id_proveedor)
  modificar_proveedor(id_proveedor, nombre, contacto, direccion)
  obtener_proveedores()
}
class "ControladorOperacionesRepuestos" as src.controlador.ControladorOperacionesRepuestos.ControladorOperacionesRepuestos {
  dao
  eliminar_repuesto(id_repuesto)
  insertar_repuesto(nombre, cantidad, ubicacion, precio_unitario, id_proveedor)
  modificar_repuesto(id_repuesto, nombre, nueva_cantidad, nueva_ubicacion, nuevo_precio_unitario)
  obtener_repuestos()
}
class "ControladorPedido" as src.controlador.ControladorGestionPedidos.ControladorPedido {
  dao_pedido
  dao_proveedor
  dao_repuesto
  crear_pedido(nombre_proveedor, repuestos)
  obtener_proveedores()
}
class "ControladorPrincipal" as src.controlador.ControladorPrincipal.ControladorPrincipal {
  admin : bool
  user_dao
  ventana_administrador : NoneType
  ventana_login : NoneType
  ventana_principal : NoneType
  login(correo, contraseña)
  mostrar_administrador()
  mostrar_login()
  mostrar_principal()
  verificar_contraseña(pw_ingresada, pw_hash)
}
class "ControladorRegistrarOrdenServicio" as src.controlador.ControladorRegistrarOrdenServicio.ControladorRegistrarOrdenServicio {
  dao_orden
  dao_vehiculo
  usuario
  obtener_vehiculos()
  registrar_orden(id_vehiculo: int, descripcion: str, fecha_ingreso: str, observaciones: str) -> dict
}
class "ControladorRegistrarVehiculo" as src.controlador.ControladorRegistrarVehiculo.ControladorRegistrarVehiculo {
  dao_cliente
  dao_vehiculo
  usuario
  obtener_clientes() -> list[dict]
  registrar_vehiculo(id_cliente: int, matricula: str, marca: str, modelo: str, anio: str) -> dict
}
class "ControladorRegistro" as src.controlador.ControladorRegistro.ControladorRegistro {
  user_dao
  registrar_usuario(datos)
  validar_campos(datos)
}
class "ControladorRegistroCliente" as src.controlador.ControladorRegistroCliente.ControladorRegistroCliente {
  dao_cliente
  dao_usuario
  registrar_cliente(nombre, apellido1, apellido2, dni, correo, direccion, contacto) -> dict
}
class "DarDeBajaVehiculos" as src.vista.DarDeBajaVehiculos.DarDeBajaVehiculos {
  controlador
  cargar_vehiculos()
  configurar_tabla()
  dar_de_baja()
  volver()
}
class "EliminarProveedor" as src.vista.EliminarProveedor.EliminarProveedor {
  controlador
  parent : NoneType
  cargar_proveedores()
  eliminar_proveedor()
  setup_events()
  setup_ui()
  volver()
}
class "EliminarRepuesto" as src.vista.EliminarRepuesto.EliminarRepuesto {
  controlador
  parent : NoneType
  cargar_repuestos()
  eliminar_repuesto()
  setup_events()
  setup_ui()
  volver()
}
class "EstadoActual" as src.vista.EstadoActual.EstadoActual {
  controlador
  id_cliente : NoneType
  parent : NoneType
  cargar_servicios()
  setup_events()
  setup_ui()
  volver()
}
class "FacturaDAO" as src.modelo.UserDao.FacturaDAO.FacturaDAO {
  conn : CMySQLConnection, MySQLConnection
  insertar_factura(factura: FacturaVO) -> int
  obtener_ordenes_finalizadas()
}
class "FacturaVO" as src.modelo.vo.FacturaVO.FacturaVO {
  Fecha
  Fecha : NoneType
  IDFactura
  IDFactura : NoneType
  IDOrden
  IDOrden : NoneType
  IDRecepcionista
  IDRecepcionista : NoneType
  Total
  Total : NoneType
}
class "Facturas" as src.vista.Factura.Facturas {
  controlador
  id_recepcionista
  cargar_tabla()
  generar_factura()
  setup_events()
  setup_ui()
  volver()
}
class "GestionPedidos" as src.vista.GestionarPedidos.GestionPedidos {
  administrador : NoneType
  controlador
  parent : NoneType
  anadir_al_pedido()
  cargar_proveedores()
  eliminar()
  realizar_pedido()
  setup_events()
  setup_ui()
  volver()
}
class "GestionProveedores" as src.vista.GestionProveedores.GestionProveedores {
  anadir
  controlador
  eliminar
  modificar
  parent : NoneType
  abrir_anadir_proveedor()
  abrir_eliminar_proveedor()
  abrir_modificar_proveedor()
  cargar_proveedores()
  setup_events()
  setup_ui()
  volver()
}
class "GestionRepuestos" as src.vista.GestionRepuestos.GestionRepuestos {
  controlador
  parent : NoneType
  ventana_anadir
  AnadirRepuestos()
  EliminarRepuestos()
  ModificarRepuestos()
  cargar_repuestos()
  setup_events()
  setup_ui()
  volver()
}
class "HistorialCliente" as src.vista.HistorialServicios.HistorialCliente {
  controlador
  id_cliente
  parent : NoneType
  cargar_historial()
  mostrar_servicios(lista_servicios)
  setup_events()
  setup_ui()
  volver()
}
class "LoginWindow" as src.vista.Login.LoginWindow {
  controlador
  panel_usuario
  parent : NoneType
  abrir_panel_principal(usuario)
  closeEvent(event)
  iniciar_sesion()
  setup_events()
  setup_ui()
  volver()
}
class "MecanicoDAO" as src.modelo.UserDao.MecanicoDAO.MecanicoDAO {
  conexion_singleton : Conexion
  conn : CMySQLConnection, MySQLConnection
  insertar(mecanico: MecanicoVO) -> int
  obtener_id_por_usuario(id_usuario: int) -> int
  obtener_mecanico_por_usuario(id_usuario)
  obtener_mecanicos_disponibles() -> list[dict]
}
class "MecanicoVO" as src.modelo.vo.MecanicoVO.MecanicoVO {
  Apellidos
  Apellidos : NoneType
  Especialidad
  Especialidad : NoneType
  FechaContratacion
  FechaContratacion : NoneType
  IDMecanico
  IDMecanico : NoneType
  IDUsuario
  IDUsuario : NoneType
  Nombre
  Nombre : NoneType
}
class "ModificarProveedor" as src.vista.ModificarProveedor.ModificarProveedor {
  controlador
  parent : NoneType
  cargar_datos_en_campos()
  cargar_proveedores()
  modificar_proveedor()
  setup_events()
  setup_ui()
  volver()
}
class "ModificarRepuesto" as src.vista.ModificarRepuesto.ModificarRepuesto {
  controlador
  parent : NoneType
  cargar_datos_en_campos()
  cargar_repuestos()
  limpiar_campos()
  modificar_repuesto()
  setup_events()
  setup_ui()
  volver()
}
class "OrdenServicioDAO" as src.modelo.UserDao.OrdenServicioDAO.OrdenServicioDAO {
  conexion_singleton : Conexion
  conn : CMySQLConnection, MySQLConnection
  actualizar_estado(id_orden: int, nuevo_estado: str, costo_mano_obra: float | None) -> bool
  asignar_orden(id_orden, id_mecanico)
  buscar_por_id(id_orden: int) -> OrdenServicioVO | None
  insertar(orden: OrdenServicioVO) -> int
  obtener_ordenesActuales_por_cliente(id_cliente)
  obtener_ordenes_por_cliente(id_cliente)
  obtener_ordenes_por_mecanico(id_mecanico)
  select_pendientes()
}
class "OrdenServicioVO" as src.modelo.vo.OrdenServicioVO.OrdenServicioVO {
  CostoManoObra
  CostoManoObra : NoneType
  Descripcion
  Descripcion : NoneType
  Estado
  Estado : NoneType
  FechaIngreso
  FechaIngreso : NoneType
  IDMecanico
  IDMecanico : NoneType
  IDOrden
  IDOrden : NoneType
  IDVehiculo
  IDVehiculo : NoneType
}
class "PanelMecanico" as src.vista.MecanicoPanel.PanelMecanico {
  id_mecanico : NoneType
  ordenes_window
  abrir_ordenes()
  cerrar_sesion()
  setup_events()
  setup_ui()
}
class "PedidoDAO" as src.modelo.UserDao.PedidoDAO.PedidoDAO {
  conexion_singleton : Conexion
  conn : CMySQLConnection, MySQLConnection
  actualizar_estado_pedido(id_pedido: int, nuevo_estado: str)
  insertar_detalle_pedido(id_pedido, id_repuesto, cantidad, precio_unitario)
  insertar_orden_repuesto(id_pedido, id_repuesto, cantidad)
  insertar_pedido(id_proveedor: int, fecha: datetime, estado: str) -> int
  obtener_id_proveedor(nombre_proveedor: str)
  obtener_pedido_por_id(id_pedido: int)
  obtener_pedidos_por_estado(estado: str)
  obtener_todos_los_proveedores()
}
class "PedidoVO" as src.modelo.vo.PedidoVO.PedidoVO {
  Estado
  Estado : NoneType
  FechaPedido
  FechaPedido : NoneType
  IDPedido
  IDPedido : NoneType
  IDProveedor
  IDProveedor : NoneType
}
class "PrincipalWindow" as src.vista.Principal.PrincipalWindow {
  login_window
  registro_window
  abrir_login()
  abrir_registro()
  salir_aplicacion()
  setup_events()
  setup_ui()
}
class "ProveedorDAO" as src.modelo.UserDao.ProveedorDAO.ProveedorDAO {
  conexion_singleton : Conexion
  conn : CMySQLConnection, MySQLConnection
  eliminar(id_proveedor: int)
  insertar(proveedor: ProveedorVO) -> int
  modificar_proveedor(id_proveedor, nombre, nuevo_contacto, nueva_direccion)
  obtener_id_por_nombre(nombre)
  obtener_nombres_proveedores()
  obtener_todos()
}
class "ProveedorVO" as src.modelo.vo.ProveedorVO.ProveedorVO {
  Contacto
  Contacto : NoneType
  Direccion
  Direccion : NoneType
  IDProveedor
  IDProveedor : NoneType
  Nombre
  Nombre : NoneType
}
class "RecepcionistaDAO" as src.modelo.UserDao.RecepcionistaDAO.RecepcionistaDAO {
  conexion : Conexion
  conn : MySQLConnection, CMySQLConnection
  insertar(recepcionista: RecepcionistaVO) -> int
  obtener_id_por_usuario(id_usuario)
}
class "RecepcionistaPanel" as src.vista.RecepcionistaPanel.RecepcionistaPanel {
  id_recepcionista : NoneType
  ordenes_window
  baja_vehiculos()
  cerrar_sesion()
  crear_orden_servicio()
  emitir_facturas()
  registrar_cliente()
  registrar_vehiculo()
  setup_events()
  setup_ui()
}
class "RecepcionistaVO" as src.modelo.vo.RecepcionistaVO.RecepcionistaVO {
  Apellidos
  Apellidos : NoneType
  IDRecepcionista
  IDRecepcionista : NoneType
  IDUsuario
  IDUsuario : NoneType
  Nombre
  Nombre : NoneType
  Turno
  Turno : NoneType
}
class "RegistrarCliente" as src.vista.RegistroCliente.RegistrarCliente {
  controlador
  usuario : NoneType
  registrar_cliente()
  setup_events()
  setup_ui()
  volver()
}
class "RegistrarOrdenServicio" as src.vista.OrdenesServicio.RegistrarOrdenServicio {
  controller
  ordenes_window
  usuario : NoneType
  asignar_orden()
  cargar_vehiculos()
  registrar_orden_servicio()
  setup_events()
  setup_ui()
  volver()
}
class "RegistrarVehiculo" as src.vista.RegistroVehículo.RegistrarVehiculo {
  controller
  usuario : NoneType
  cargar_clientes()
  on_registrar_clicked()
  setup_events()
  setup_ui()
  volver()
}
class "RegistroWindow" as src.vista.Registro.RegistroWindow {
  controlador
  parent : NoneType
  ventana
  closeEvent(event)
  registrar_usuario()
  setup_events()
  setup_ui()
}
class "RepuestoDAO" as src.modelo.UserDao.RepuestoDAO.RepuestoDAO {
  conexion_singleton : Conexion
  conn : CMySQLConnection, MySQLConnection
  eliminar(id_repuesto: int)
  insertar(repuesto: RepuestoVO) -> int
  insertar_repuesto(nombre, cantidad, ubicacion, precio_unitario, id_proveedor)
  modificar_repuesto(id_repuesto, nombre, nuevo_cantidad, nueva_ubicacion, nuevo_precio)
  obtener_id_por_nombre(nombre_repuesto: str)
  obtener_todos()
}
class "RepuestoVO" as src.modelo.vo.RepuestoVO.RepuestoVO {
  Cantidad
  Cantidad : NoneType
  IDProveedor
  IDProveedor : NoneType
  IDRepuesto
  IDRepuesto : NoneType
  Nombre
  Nombre : NoneType
  PrecioUnitario
  PrecioUnitario : NoneType
  Ubicacion
  Ubicacion : NoneType
}
class "UserDaoJDBC" as src.modelo.UserDao.UserDAOJDBC.UserDaoJDBC {
  SQL_BUSCAR_POR_EMAIL : str
  SQL_INSERT : str
  SQL_SELECT : str
  conn : MySQLConnection, CMySQLConnection
  buscar_por_email(email: str) -> UserVO | None
  insert(usuario: UserVO) -> int
  obtener_usuarios_tipo(tipo: str) -> list[UserVO]
  select() -> list[UserVO]
  select_por_rol(rol: str)
}
class "UserVO" as src.modelo.vo.UserVO.UserVO {
  Apellidos
  Contraseña
  Correo
  DNI
  IDUsuario
  IDUsuario : int, NoneType
  Nombre
  TipoUsuario
}
class "VehiculoDAO" as src.modelo.UserDao.VehiculoDAO.VehiculoDAO {
  conn : MySQLConnection, CMySQLConnection
  buscar_por_matricula(matricula: str) -> VehiculoVO | None
  eliminar_vehiculo(id_vehiculo: int) -> bool
  insertar(vehiculo: VehiculoVO) -> int
  obtener_vehiculos_con_clientes() -> list[dict]
  select() -> list[dict]
}
class "VehiculoVO" as src.modelo.vo.VehiculoVO.VehiculoVO {
  Anio
  Anio : NoneType
  IDCliente
  IDCliente : NoneType
  IDVehiculo
  IDVehiculo : NoneType
  Marca
  Marca : NoneType
  Matricula
  Matricula : NoneType
  Modelo
  Modelo : NoneType
}
class "VentanaActualizarEstado" as src.vista.ActualizarEstado.VentanaActualizarEstado {
  controlador
  id_orden
  actualizar_estado()
  cargar_estados()
  setup_events()
  setup_ui()
  volver()
}
class "VentanaCliente" as src.vista.VentanaCliente.VentanaCliente {
  parent : NoneType
  usuario
  registrar_cliente()
  setup_events()
  setup_ui()
  volver()
}
class "VentanaConsultarEstado" as src.vista.ConsultarEstado.VentanaConsultarEstado {
  actualizar_estado_window
  controlador
  id_mecanico
  actualizar_estado()
  cargar_ordenes()
  setup_events()
  setup_ui()
  volver()
}
class "VentanaMecanico" as src.vista.VentanaMecanico.VentanaMecanico {
  parent : NoneType
  usuario
  registrar_cliente()
  setup_events()
  setup_ui()
  volver()
}
class "VentanaRecepcionista" as src.vista.VentanaRecepcionista.VentanaRecepcionista {
  parent : NoneType
  usuario
  registrar_cliente()
  setup_events()
  setup_ui()
  volver()
}
src.controlador.ControladorActualizarEstado.ControladorActualizarEstado --* src.vista.ActualizarEstado.VentanaActualizarEstado : controlador
src.controlador.ControladorAsignarOrden.ControladorAsignarOrden --* src.vista.AsignarOrden.AsignarOrden : controller
src.controlador.ControladorConsultarEstado.ControladorConsultarEstado --* src.vista.ConsultarEstado.VentanaConsultarEstado : controlador
src.controlador.ControladorDarDeBajaVehiculos.ControladorDarDeBajaVehiculos --* src.vista.DarDeBajaVehiculos.DarDeBajaVehiculos : controlador
src.controlador.ControladorEstadoActual.ControladorEstadoActual --* src.vista.EstadoActual.EstadoActual : controlador
src.controlador.ControladorFactura.ControladorFacturas --* src.vista.Factura.Facturas : controlador
src.controlador.ControladorGestionPedidos.ControladorPedido --* src.vista.GestionarPedidos.GestionPedidos : controlador
src.controlador.ControladorGestionProveedores.ControladorGestionProveedores --* src.vista.GestionProveedores.GestionProveedores : controlador
src.controlador.ControladorGestionRepuestos.ControladorGestionRepuestos --* src.vista.GestionRepuestos.GestionRepuestos : controlador
src.controlador.ControladorHistorialServicios.ControladorHistorialServicios --* src.vista.HistorialServicios.HistorialCliente : controlador
src.controlador.ControladorLogin.ControladorLogin --* src.vista.Login.LoginWindow : controlador
src.controlador.ControladorOperacionesProveedores.ControladorOperacionesProveedores --* src.vista.AnadirProveedor.AnadirProveedor : controlador
src.controlador.ControladorOperacionesProveedores.ControladorOperacionesProveedores --* src.vista.AnadirRepuestos.AnadirRepuesto : controlador_proveedores
src.controlador.ControladorOperacionesProveedores.ControladorOperacionesProveedores --* src.vista.EliminarProveedor.EliminarProveedor : controlador
src.controlador.ControladorOperacionesProveedores.ControladorOperacionesProveedores --* src.vista.ModificarProveedor.ModificarProveedor : controlador
src.controlador.ControladorOperacionesRepuestos.ControladorOperacionesRepuestos --* src.vista.AnadirRepuestos.AnadirRepuesto : controlador_repuestos
src.controlador.ControladorOperacionesRepuestos.ControladorOperacionesRepuestos --* src.vista.EliminarRepuesto.EliminarRepuesto : controlador
src.controlador.ControladorOperacionesRepuestos.ControladorOperacionesRepuestos --* src.vista.ModificarRepuesto.ModificarRepuesto : controlador
src.controlador.ControladorPedidosRecibidos.ControladorActualizarPedido --* src.vista.PedidoRecibido.ActualizarEstadoPedido : controlador
src.controlador.ControladorRegistrarOrdenServicio.ControladorRegistrarOrdenServicio --* src.vista.OrdenesServicio.RegistrarOrdenServicio : controller
src.controlador.ControladorRegistrarVehiculo.ControladorRegistrarVehiculo --* src.vista.RegistroVehículo.RegistrarVehiculo : controller
src.controlador.ControladorRegistro.ControladorRegistro --* src.vista.Registro.RegistroWindow : controlador
src.controlador.ControladorRegistroCliente.ControladorRegistroCliente --* src.vista.RegistroCliente.RegistrarCliente : controlador
src.modelo.UserDao.ClienteDAO.ClienteDao --* src.controlador.ControladorRegistrarVehiculo.ControladorRegistrarVehiculo : dao_cliente
src.modelo.UserDao.ClienteDAO.ClienteDao --* src.controlador.ControladorRegistroCliente.ControladorRegistroCliente : dao_cliente
src.modelo.UserDao.FacturaDAO.FacturaDAO --* src.controlador.ControladorFactura.ControladorFacturas : factura_dao
src.modelo.UserDao.MecanicoDAO.MecanicoDAO --* src.controlador.ControladorAsignarOrden.ControladorAsignarOrden : dao_mecanico
src.modelo.UserDao.OrdenServicioDAO.OrdenServicioDAO --* src.controlador.ControladorActualizarEstado.ControladorActualizarEstado : orden_dao
src.modelo.UserDao.OrdenServicioDAO.OrdenServicioDAO --* src.controlador.ControladorAsignarOrden.ControladorAsignarOrden : dao_orden
src.modelo.UserDao.OrdenServicioDAO.OrdenServicioDAO --* src.controlador.ControladorConsultarEstado.ControladorConsultarEstado : orden_dao
src.modelo.UserDao.OrdenServicioDAO.OrdenServicioDAO --* src.controlador.ControladorEstadoActual.ControladorEstadoActual : dao
src.modelo.UserDao.OrdenServicioDAO.OrdenServicioDAO --* src.controlador.ControladorHistorialServicios.ControladorHistorialServicios : orden_dao
src.modelo.UserDao.OrdenServicioDAO.OrdenServicioDAO --* src.controlador.ControladorRegistrarOrdenServicio.ControladorRegistrarOrdenServicio : dao_orden
src.modelo.UserDao.PedidoDAO.PedidoDAO --* src.controlador.ControladorGestionPedidos.ControladorPedido : dao_pedido
src.modelo.UserDao.PedidoDAO.PedidoDAO --* src.controlador.ControladorPedidosRecibidos.ControladorActualizarPedido : dao_pedido
src.modelo.UserDao.ProveedorDAO.ProveedorDAO --* src.controlador.ControladorGestionPedidos.ControladorPedido : dao_proveedor
src.modelo.UserDao.ProveedorDAO.ProveedorDAO --* src.controlador.ControladorGestionProveedores.ControladorGestionProveedores : dao
src.modelo.UserDao.ProveedorDAO.ProveedorDAO --* src.controlador.ControladorOperacionesProveedores.ControladorOperacionesProveedores : dao
src.modelo.UserDao.RepuestoDAO.RepuestoDAO --* src.controlador.ControladorGestionPedidos.ControladorPedido : dao_repuesto
src.modelo.UserDao.RepuestoDAO.RepuestoDAO --* src.controlador.ControladorGestionRepuestos.ControladorGestionRepuestos : dao
src.modelo.UserDao.RepuestoDAO.RepuestoDAO --* src.controlador.ControladorOperacionesRepuestos.ControladorOperacionesRepuestos : dao
src.modelo.UserDao.UserDAOJDBC.UserDaoJDBC --* src.controlador.ControladorLogin.ControladorLogin : user_dao
src.modelo.UserDao.UserDAOJDBC.UserDaoJDBC --* src.controlador.ControladorPrincipal.ControladorPrincipal : user_dao
src.modelo.UserDao.UserDAOJDBC.UserDaoJDBC --* src.controlador.ControladorRegistro.ControladorRegistro : user_dao
src.modelo.UserDao.UserDAOJDBC.UserDaoJDBC --* src.controlador.ControladorRegistroCliente.ControladorRegistroCliente : dao_usuario
src.modelo.UserDao.VehiculoDAO.VehiculoDAO --* src.controlador.ControladorDarDeBajaVehiculos.ControladorDarDeBajaVehiculos : vehiculo_dao
src.modelo.UserDao.VehiculoDAO.VehiculoDAO --* src.controlador.ControladorRegistrarOrdenServicio.ControladorRegistrarOrdenServicio : dao_vehiculo
src.modelo.UserDao.VehiculoDAO.VehiculoDAO --* src.controlador.ControladorRegistrarVehiculo.ControladorRegistrarVehiculo : dao_vehiculo
src.vista.ActualizarEstado.VentanaActualizarEstado --* src.vista.ConsultarEstado.VentanaConsultarEstado : actualizar_estado_window
src.vista.AdministradorPanel.AdministradorPanel --* src.controlador.ControladorPrincipal.ControladorPrincipal : ventana_administrador
src.vista.AnadirProveedor.AnadirProveedor --* src.vista.GestionProveedores.GestionProveedores : anadir
src.vista.AnadirRepuestos.AnadirRepuesto --* src.vista.GestionRepuestos.GestionRepuestos : ventana_anadir
src.vista.AsignarOrden.AsignarOrden --* src.vista.OrdenesServicio.RegistrarOrdenServicio : ordenes_window
src.vista.ClientePanel.ClientePanel --* src.vista.Login.LoginWindow : panel_usuario
src.vista.ConsultarEstado.VentanaConsultarEstado --* src.vista.MecanicoPanel.PanelMecanico : ordenes_window
src.vista.DarDeBajaVehiculos.DarDeBajaVehiculos --* src.vista.RecepcionistaPanel.RecepcionistaPanel : ordenes_window
src.vista.EliminarProveedor.EliminarProveedor --* src.vista.GestionProveedores.GestionProveedores : eliminar
src.vista.EliminarRepuesto.EliminarRepuesto --* src.vista.GestionRepuestos.GestionRepuestos : ventana_anadir
src.vista.EstadoActual.EstadoActual --* src.vista.ClientePanel.ClientePanel : historial_window
src.vista.Factura.Facturas --* src.vista.RecepcionistaPanel.RecepcionistaPanel : ordenes_window
src.vista.GestionProveedores.GestionProveedores --* src.vista.AdministradorPanel.AdministradorPanel : administrador_orden
src.vista.GestionRepuestos.GestionRepuestos --* src.vista.AdministradorPanel.AdministradorPanel : administrador_orden
src.vista.GestionarPedidos.GestionPedidos --* src.vista.AdministradorPanel.AdministradorPanel : administrador_orden
src.vista.HistorialServicios.HistorialCliente --* src.vista.ClientePanel.ClientePanel : historial_window
src.vista.Login.LoginWindow --* src.controlador.ControladorPrincipal.ControladorPrincipal : ventana_login
src.vista.Login.LoginWindow --* src.vista.Principal.PrincipalWindow : login_window
src.vista.MecanicoPanel.PanelMecanico --* src.vista.Login.LoginWindow : panel_usuario
src.vista.ModificarProveedor.ModificarProveedor --* src.vista.GestionProveedores.GestionProveedores : modificar
src.vista.ModificarRepuesto.ModificarRepuesto --* src.vista.GestionRepuestos.GestionRepuestos : ventana_anadir
src.vista.OrdenesServicio.RegistrarOrdenServicio --* src.vista.RecepcionistaPanel.RecepcionistaPanel : ordenes_window
src.vista.PedidoRecibido.ActualizarEstadoPedido --* src.vista.AdministradorPanel.AdministradorPanel : administrador_orden
src.vista.Principal.PrincipalWindow --* src.controlador.ControladorPrincipal.ControladorPrincipal : ventana_principal
src.vista.RecepcionistaPanel.RecepcionistaPanel --* src.vista.Login.LoginWindow : panel_usuario
src.vista.Registro.RegistroWindow --* src.vista.Principal.PrincipalWindow : registro_window
src.vista.RegistroCliente.RegistrarCliente --* src.vista.RecepcionistaPanel.RecepcionistaPanel : ordenes_window
src.vista.RegistroVehículo.RegistrarVehiculo --* src.vista.RecepcionistaPanel.RecepcionistaPanel : ordenes_window
src.vista.VentanaCliente.VentanaCliente --* src.vista.Registro.RegistroWindow : ventana
src.vista.VentanaMecanico.VentanaMecanico --* src.vista.Registro.RegistroWindow : ventana
src.vista.VentanaRecepcionista.VentanaRecepcionista --* src.vista.Registro.RegistroWindow : ventana
src.modelo.vo.UserVO.UserVO --o src.vista.VentanaCliente.VentanaCliente : usuario
src.modelo.vo.UserVO.UserVO --o src.vista.VentanaMecanico.VentanaMecanico : usuario
src.modelo.vo.UserVO.UserVO --o src.vista.VentanaRecepcionista.VentanaRecepcionista : usuario
@enduml
